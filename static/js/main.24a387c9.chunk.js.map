{"version":3,"sources":["components/SearchBar/SearchBar.jsx","components/ImageGallery/ImageGallery.jsx","services/api.js","components/ImageGalleryItem/ImageGalleryItem.jsx","components/Button/Button.jsx","components/Modal/Modal.jsx","components/App/App.jsx","index.js"],"names":["SearchBar","state","imgName","imgToSearch","setState","onFormSubmit","e","preventDefault","props","onSubmit","this","className","type","onChange","target","value","autoComplete","autoFocus","placeholder","Component","propsTypes","PropTypes","func","ImageGallery","children","API_KEY","axios","defaults","baseURL","getImg","a","page","queryOptions","URLSearchParams","key","q","image_type","orientation","safesearch","per_page","get","toString","data","ImageGalleryItem","image","onClick","src","webformatURL","alt","tags","largeImageURL","id","Button","onClickBtn","Modal","pressEsc","code","onClose","onBackDropClick","currentTarget","window","addEventListener","removeEventListener","largeImg","require","loaderStyle","position","left","top","transform","App","imgsArray","searchImg","loader","altImage","fetchNextPageImg","prevState","getSearchImg","imgs","totalHits","toast","error","hits","length","success","message","onSearchSubmit","onCloseModal","onClickImage","dataset","large","prevProps","color","height","width","style","timeout","map","img","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.24a387c9.chunk.js","sourcesContent":["import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './SearchBar.scss';\r\n\r\nclass SearchBar extends Component {\r\n  state = {\r\n    imgName: '',\r\n  };\r\n\r\n  imgToSearch = imgName => {\r\n    this.setState({ imgName });\r\n  };\r\n\r\n  onFormSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.onSubmit(this.state.imgName);\r\n  };\r\n\r\n  render() {\r\n    const { imgToSearch, onFormSubmit, state } = this;\r\n    return (\r\n      <header className=\"searchbar\">\r\n        <form className=\"SearchForm\" onSubmit={onFormSubmit}>\r\n          <button type=\"submit\" className=\"SearchForm-button\">\r\n            &#128269;\r\n            <span className=\"SearchForm-button-label\">Search</span>\r\n          </button>\r\n\r\n          <input\r\n            onChange={e => imgToSearch(e.target.value)}\r\n            value={state.imgName}\r\n            className=\"SearchForm-input\"\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nSearchBar.propsTypes = {\r\n  onSubmit: PropTypes.func,\r\n};\r\n\r\nexport default SearchBar;\r\n","import PropTypes from 'prop-types';\r\n\r\nimport './ImageGallery.scss';\r\n\r\nconst ImageGallery = ({ children }) => {\r\n  return <ul className=\"ImageGallery\">{children}</ul>;\r\n};\r\n\r\nImageGallery.propTypes = {\r\n  children: PropTypes.array,\r\n};\r\n\r\nexport default ImageGallery;\r\n","import axios from 'axios';\r\n\r\nconst BASE_URL = 'https://pixabay.com/api/';\r\nconst API_KEY = '24484342-5d490b786e593542a839fc86b';\r\n\r\naxios.defaults.baseURL = BASE_URL;\r\n\r\nconst getImg = async (imgToSearch, page = 1) => {\r\n  const queryOptions = new URLSearchParams({\r\n    key: API_KEY,\r\n    q: imgToSearch,\r\n    image_type: 'photo',\r\n    orientation: 'horizontal',\r\n    safesearch: true,\r\n    per_page: 12,\r\n    page,\r\n  });\r\n  try {\r\n    const { data } = await axios.get('?' + queryOptions.toString());\r\n    return data;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport default getImg;\r\n","import PropTypes from 'prop-types';\r\nimport './ImageGalleryItem.scss';\r\n\r\nconst ImageGalleryItem = ({ image, onClick }) => {\r\n  return (\r\n    <>\r\n      <li className=\"ImageGalleryItem\" key={image.id} onClick={onClick}>\r\n        <img\r\n          className=\"ImageGalleryItem-image\"\r\n          src={image.webformatURL}\r\n          alt={image.tags}\r\n          data-large={image.largeImageURL}\r\n        />\r\n      </li>\r\n    </>\r\n  );\r\n};\r\n\r\nImageGalleryItem.propTypes = {\r\n  image: PropTypes.object,\r\n  onClick: PropTypes.func,\r\n};\r\n\r\nexport default ImageGalleryItem;\r\n","import PropTypes from 'prop-types';\r\nimport './Button.scss';\r\n\r\nconst Button = ({ onClickBtn }) => {\r\n  return (\r\n    <div className=\"coverBtn\">\r\n      <button onClick={() => onClickBtn()} className=\"btn\" type=\"button\">\r\n        Load more\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nButton.propTypes = {\r\n  onClickBtn: PropTypes.func,\r\n};\r\n\r\nexport default Button;\r\n","import PropTypes from 'prop-types';\r\nimport './Modal.scss';\r\nconst { Component } = require('react');\r\n\r\nclass Modal extends Component {\r\n  componentDidMount() {\r\n    window.addEventListener('keydown', this.pressEsc);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('keydown', this.pressEsc);\r\n  }\r\n\r\n  pressEsc = e => {\r\n    if (e.code === 'Escape') {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  onBackDropClick = e => {\r\n    if (e.currentTarget === e.target) {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { largeImg, alt } = this.props;\r\n    return (\r\n      <div className=\"overlay\" onClick={this.onBackDropClick}>\r\n        <div className=\"modal\">\r\n          <img src={largeImg} alt={alt} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nModal.propTypes = {\r\n  largeImg: PropTypes.string,\r\n  alt: PropTypes.string,\r\n  onClose: PropTypes.func,\r\n};\r\n\r\nexport default Modal;\r\n","import { Component } from 'react';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\n\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport SearchBar from '../SearchBar/SearchBar';\r\nimport ImageGallery from '../ImageGallery/ImageGallery';\r\nimport getImg from '../../services/api';\r\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\r\nimport Button from '../Button/Button';\r\nimport Modal from '../Modal/Modal';\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\nimport Loader from 'react-loader-spinner';\r\n\r\nconst loaderStyle = {\r\n  position: 'fixed',\r\n  left: '50%',\r\n  top: '50%',\r\n  transform: 'translate(-50%, -50%)',\r\n};\r\n\r\nclass App extends Component {\r\n  state = {\r\n    page: 1,\r\n    imgsArray: [],\r\n    searchImg: '',\r\n    loader: false,\r\n    largeImg: '',\r\n    altImage: '',\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const { searchImg, page } = this.state;\r\n    if (prevState.searchImg !== searchImg || prevState.page !== page) {\r\n      this.getSearchImg();\r\n    }\r\n  }\r\n\r\n  fetchNextPageImg = () => {\r\n    this.setState(prevState => ({\r\n      page: prevState.page + 1,\r\n    }));\r\n  };\r\n\r\n  getSearchImg = async () => {\r\n    const { searchImg, page } = this.state;\r\n    this.setState({ loader: true });\r\n    try {\r\n      const imgs = await getImg(searchImg, page);\r\n\r\n      if (!imgs.totalHits) {\r\n        return toast.error('Please write valid value');\r\n      }\r\n\r\n      this.setState(prevState => ({\r\n        imgsArray: [...prevState.imgsArray, ...imgs.hits],\r\n      }));\r\n\r\n      if (this.state.imgsArray.length && this.state.page === 1) {\r\n        toast.success(`We found ${imgs.totalHits} images`);\r\n      }\r\n\r\n      return imgs.hits;\r\n    } catch (error) {\r\n      toast.error(`${error.message}`);\r\n    } finally {\r\n      this.setState({ loader: false });\r\n    }\r\n  };\r\n\r\n  onSearchSubmit = searchImg => {\r\n    this.setState({ searchImg, imgsArray: [], page: 1 });\r\n  };\r\n\r\n  onCloseModal = () => {\r\n    this.setState({ largeImg: '', altImage: '' });\r\n  };\r\n\r\n  onClickImage = e => {\r\n    if (e.currentTarget === e.target) return;\r\n    const largeImg = e.target.dataset.large;\r\n    const altImage = e.target.alt;\r\n    this.setState({ largeImg, altImage });\r\n  };\r\n\r\n  render() {\r\n    const { onSearchSubmit, fetchNextPageImg, onClickImage } = this;\r\n    const { imgsArray, loader, largeImg, altImage } = this.state;\r\n    return (\r\n      <>\r\n        <SearchBar onSubmit={onSearchSubmit} />\r\n        <main>\r\n          {loader && (\r\n            <Loader\r\n              type=\"ThreeDots\"\r\n              color=\"#00BFFF\"\r\n              height={80}\r\n              width={80}\r\n              style={{ ...loaderStyle }}\r\n              timeout={1000}\r\n            />\r\n          )}\r\n\r\n          <ImageGallery>\r\n            {imgsArray.map(img => (\r\n              <ImageGalleryItem image={img} onClick={onClickImage} />\r\n            ))}\r\n          </ImageGallery>\r\n\r\n          {imgsArray.length > 11 && <Button onClickBtn={fetchNextPageImg} />}\r\n\r\n          <ToastContainer />\r\n        </main>\r\n\r\n        {largeImg && (\r\n          <Modal\r\n            onClose={this.onCloseModal}\r\n            largeImg={largeImg}\r\n            alt={altImage}\r\n          />\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}